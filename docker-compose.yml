version: "3.3"

services:
  elasticsearch:
    container_name: elastic
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    volumes:
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - node.name=elk
      - cluster.name=docker-cluster
      - cluster.initial_master_nodes=elk
      - bootstrap.memory_lock=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    networks:
      - elk

  heartbeat:
    container_name: beat
    entrypoint: "heartbeat -e -strict.perms=false"
    build:
      context: heartbeat/
      args:
        ELK_VERSION: $ELK_VERSION
    ports:
      - 9600:9600
    networks:
      - elk
    depends_on:
      - elasticsearch
      
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:${ELK_VERSION}
    environment: 
      - server.name=kibana
      - server.host="0"
      - elasticsearch.hosts=http://localhost:9200
    ports:
      - 5601:5601
    networks:
      - elk
    depends_on:
      - elasticsearch

  zap:
    container_name: zap
    image: owasp/zap2docker-weekly
    ports:
      - 2375:2375
    entrypoint: zap.sh -daemon -host 0.0.0.0 -port 2375 -config api.disablekey=true -config scanner.attackOnStart=true -config view.mode=attack -config connection.dnsTtlSuccessfulQueries=-1 -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true
    volumes:
      - zap:/zap/data
    networks:
      - elk
    depends_on:
      - elasticsearch

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
    driver: local
  zap:
   driver: local